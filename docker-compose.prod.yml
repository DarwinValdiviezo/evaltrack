version: '3.8'

services:
  # ========================================
  # POSTGRESQL DATABASE
  # ========================================
  postgres:
    image: postgres:15-alpine
    container_name: evaltrack-postgres-prod
    restart: unless-stopped
    environment:
      POSTGRES_DB: evaltrack_prod
      POSTGRES_USER: ${DB_USER:-evaltrack_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/backup:/backups
    ports:
      - "5432:5432"
    networks:
      - evaltrack-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-evaltrack_user}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ========================================
  # REDIS CACHE
  # ========================================
  redis:
    image: redis:7-alpine
    container_name: evaltrack-redis-prod
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - evaltrack-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ========================================
  # BACKEND API (NestJS)
  # ========================================
  backend:
    image: darwinvaldiviezo/evaltrack-api:${VERSION:-latest}
    container_name: evaltrack-backend-prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${DB_USER:-evaltrack_user}:${DB_PASSWORD}@postgres:5432/evaltrack_prod
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      REDIS_URL: redis://redis:6379
      PORT: 3000
      LOG_LEVEL: ${LOG_LEVEL:-info}
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - evaltrack-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # ========================================
  # FRONTEND (React)
  # ========================================
  frontend:
    image: darwinvaldiviezo/evaltrack-frontend:${VERSION:-latest}
    container_name: evaltrack-frontend-prod
    restart: unless-stopped
    environment:
      VITE_API_URL: ${FRONTEND_API_URL:-http://localhost:3000}
      VITE_APP_NAME: EvalTrack v2.0
    ports:
      - "5173:5173"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - evaltrack-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 256M
          cpus: '0.1'

  # ========================================
  # NGINX REVERSE PROXY
  # ========================================
  nginx:
    image: nginx:alpine
    container_name: evaltrack-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - backend
      - frontend
    networks:
      - evaltrack-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ========================================
  # MONITORING - PROMETHEUS
  # ========================================
  prometheus:
    image: prom/prometheus:latest
    container_name: evaltrack-prometheus-prod
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - evaltrack-network

  # ========================================
  # MONITORING - GRAFANA
  # ========================================
  grafana:
    image: grafana/grafana:latest
    container_name: evaltrack-grafana-prod
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin123}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - evaltrack-network

  # ========================================
  # LOGGING - ELK STACK
  # ========================================
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: evaltrack-elasticsearch-prod
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - evaltrack-network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: evaltrack-kibana-prod
    restart: unless-stopped
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - evaltrack-network

# ========================================
# VOLUMES
# ========================================
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  elasticsearch_data:
    driver: local

# ========================================
# NETWORKS
# ========================================
networks:
  evaltrack-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 